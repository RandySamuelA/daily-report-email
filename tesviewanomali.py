# -*- coding: utf-8 -*-
"""TesViewAnomali.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Uji0CHvht5rRn9wh-iXgdeo5L3SupwXa
"""

!pip install pandas openpyxl mysql-connector-python sqlalchemy
!pip install pyodbc

"""## Import Package yang dibutuhkan"""

import pandas as pd
import smtplib
from sqlalchemy import create_engine
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
import os
import datetime

# --- Konfigurasi ---
db_username = 'auditpros'
db_password = 'D1t!787!PR0s'
db_host = '103.61.234.10'  # contoh: '35.219.22.11' jika pakai Cloud SQL
db_port = '3030'
db_name = 'auditpros'

email_pengirim = 'i_randy.arden@kawanlamacorp.com'
email_password = 'fmlu wrfn eenz qnmg'  # app password dari Gmail
email_tujuan = ['randysamuelboyz@gmail.com']

# --- FOLDER & FILE ---
folder_path = r'D:\Randy\Daily Anomaly'
file_name = 'Laporan Harian.csv'
file_path = os.path.join(folder_path, file_name)

# --- FUNGSI UTAMA ---
def kirim_laporan():
    try:
        print(f"[{datetime.datetime.now()}] Menjalankan proses...")

        # 1. KONEKSI DATABASE & AMBIL DATA
        engine = create_engine(f"mysql+mysqlconnector://{db_username}:{db_password}@{db_host}:{db_port}/{db_name}")
        query = "SELECT * FROM ViewAnomali_SLA_AHI;"  # ganti dengan query kamu
        df = pd.read_sql(query, engine)

        # 2. SIMPAN SEBAGAI CSV
        if not os.path.exists(folder_path):
            os.makedirs(folder_path)
        df.to_csv(file_path, index=False)
        print(f"‚úÖ File disimpan di: {file_path}")

        # 3. SIAPKAN EMAIL
        msg = MIMEMultipart()
        msg['From'] = email_pengirim
        msg['To'] = ', '.join(email_tujuan)
        msg['Subject'] = 'Laporan Harian - ' + datetime.datetime.now().strftime('%d-%m-%Y')

        part = MIMEBase('application', "octet-stream")
        with open(file_path, 'rb') as file:
            part.set_payload(file.read())
        encoders.encode_base64(part)
        part.add_header('Content-Disposition', f'attachment; filename="{file_name}"')
        msg.attach(part)

        # 4. KIRIM EMAIL
        with smtplib.SMTP('smtp.gmail.com', 587) as server:
            server.starttls()
            server.login(email_pengirim, email_password)
            server.sendmail(email_pengirim, email_tujuan, msg.as_string())

        print("üìß Email berhasil dikirim!")

    except Exception as e:
        print("‚ùå Terjadi kesalahan:", e)

# JALANKAN SEKARANG
kirim_laporan()